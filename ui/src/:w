import {mergeStyleSets} from "@fluentui/react";
import React, {useMemo} from "react";
import { Alert, AlertService } from "../services/alert.service";
import {Helpers} from "../services/helpers";

export interface IAlertTimelineProps {
  alert: Alert;
}

interface ListItem {
  date: Date,
  message: string,
}

export const AlertTimeline: React.FC<IAlertTimelineProps> = (props) => {
  const { alert } = props;
  const startsAt = useMemo(() => AlertService.getStartsAt(alert), [alert]);
  const endsAt = useMemo(() => AlertService.getEndsAt(alert), [alert]);

  const styles = mergeStyleSets({
    itemContainer: {
      marginTop: '16px',
    },
    item: {
      minHeight: '48px',
      width: 'calc(100% - 32px)',
      position: 'relative',
      backgroundColor: '#fff',
      boxShadow: '4px 16px 15px -3px rgba(0,0,0,0.1)',
      marginBottom: '16px',
      height: 'fit-content',
      padding: '16px',
      '& > span': {
        fontSize: '12px',
        color: '#8c8c8c',
        position: 'absolute',
        top: '16px',
        right: '16px',
      }
    }
  });

  if (startsAt == null || endsAt == null) return null;

  const items: ListItem[] = [
    { date: startsAt, message: 'Alert started' },
    { date: endsAt, message: 'Alert ended' },
  ];

  return <div className={styles.itemContainer}>
    {items.map(i => <div className={styles.item}>
      <span>{Helpers.formatDate(i.date)}</span>
      <p>{i.message}</p>
    </div>)}
  </div>
}

